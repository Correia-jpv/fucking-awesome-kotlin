/*
 * This file is generated by jOOQ.
 */
package jooq.main.tables.pojos


import java.io.Serializable
import java.time.LocalDateTime
import java.util.UUID


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
data class GithubAuth(
    var id: UUID? = null,
    var userId: UUID? = null,
    var accessToken: String? = null,
    var expiresIn: Int? = null,
    var refreshToken: String? = null,
    var refreshTokenExpiresIn: Int? = null,
    var tokenType: String? = null,
    var scope: String? = null,
    var createdAt: LocalDateTime? = null
): Serializable {


    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other == null)
            return false
        if (this::class != other::class)
            return false
        val o: GithubAuth = other as GithubAuth
        if (this.id == null) {
            if (o.id != null)
                return false
        }
        else if (this.id != o.id)
            return false
        if (this.userId == null) {
            if (o.userId != null)
                return false
        }
        else if (this.userId != o.userId)
            return false
        if (this.accessToken == null) {
            if (o.accessToken != null)
                return false
        }
        else if (this.accessToken != o.accessToken)
            return false
        if (this.expiresIn == null) {
            if (o.expiresIn != null)
                return false
        }
        else if (this.expiresIn != o.expiresIn)
            return false
        if (this.refreshToken == null) {
            if (o.refreshToken != null)
                return false
        }
        else if (this.refreshToken != o.refreshToken)
            return false
        if (this.refreshTokenExpiresIn == null) {
            if (o.refreshTokenExpiresIn != null)
                return false
        }
        else if (this.refreshTokenExpiresIn != o.refreshTokenExpiresIn)
            return false
        if (this.tokenType == null) {
            if (o.tokenType != null)
                return false
        }
        else if (this.tokenType != o.tokenType)
            return false
        if (this.scope == null) {
            if (o.scope != null)
                return false
        }
        else if (this.scope != o.scope)
            return false
        if (this.createdAt == null) {
            if (o.createdAt != null)
                return false
        }
        else if (this.createdAt != o.createdAt)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + (if (this.id == null) 0 else this.id.hashCode())
        result = prime * result + (if (this.userId == null) 0 else this.userId.hashCode())
        result = prime * result + (if (this.accessToken == null) 0 else this.accessToken.hashCode())
        result = prime * result + (if (this.expiresIn == null) 0 else this.expiresIn.hashCode())
        result = prime * result + (if (this.refreshToken == null) 0 else this.refreshToken.hashCode())
        result = prime * result + (if (this.refreshTokenExpiresIn == null) 0 else this.refreshTokenExpiresIn.hashCode())
        result = prime * result + (if (this.tokenType == null) 0 else this.tokenType.hashCode())
        result = prime * result + (if (this.scope == null) 0 else this.scope.hashCode())
        result = prime * result + (if (this.createdAt == null) 0 else this.createdAt.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("GithubAuth (")

        sb.append(id)
        sb.append(", ").append(userId)
        sb.append(", ").append(accessToken)
        sb.append(", ").append(expiresIn)
        sb.append(", ").append(refreshToken)
        sb.append(", ").append(refreshTokenExpiresIn)
        sb.append(", ").append(tokenType)
        sb.append(", ").append(scope)
        sb.append(", ").append(createdAt)

        sb.append(")")
        return sb.toString()
    }
}
